apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
  namespace: kube-ec
data:
  init.sql: |
    -- Create users table
    CREATE TABLE IF NOT EXISTS users (
        id VARCHAR(255) PRIMARY KEY,
        email VARCHAR(255) UNIQUE NOT NULL,
        password_hash VARCHAR(60) NOT NULL,  -- bcrypt hashes are always 60 characters
        name VARCHAR(255) NOT NULL,
        phone_number VARCHAR(50),
        created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
    );

    -- Create index on email for faster lookups
    CREATE INDEX IF NOT EXISTS idx_users_email ON users(email);

    -- Create index on created_at
    CREATE INDEX IF NOT EXISTS idx_users_created_at ON users(created_at);
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: kube-ec
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# NOTE: This PostgreSQL deployment is for DEVELOPMENT/TESTING ONLY
# For production, use a managed database service or implement:
# - High availability (replicas, failover)
# - Automated backups
# - Monitoring and alerting
# - Security hardening
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: kube-ec
type: Opaque
stringData:
  username: postgres
  password: postgres  # Change this in production
  database: kube_ec
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: kube-ec
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: database
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: init-script
        configMap:
          name: postgres-init
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: kube-ec
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
  selector:
    app: postgres
